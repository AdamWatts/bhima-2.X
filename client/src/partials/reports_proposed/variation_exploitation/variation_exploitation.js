var variationExploitationController = function ($http, $translate, validate, reportConfigService, messenger) {
  var dependencies = {}, generatedDocumentPath = null, 
      serverUtilityPath = '/report/build/variation_exploitation', 
      configuration = reportConfigService.configuration, vm = this;

  dependencies.fiscalYears = {
    required : true,
    query : {
      identifier : 'id',
      tables : {
        'fiscal_year' : {
          columns : ['id', 'fiscal_year_txt', 'previous_fiscal_year']
        }
      }
    }
  };

  validate.process(dependencies)
    .then(setDefaultConfiguration, function (err){
      messenger.danger(err);
    });

  function setDefaultConfiguration(models) {
    angular.extend(vm, models);
    selectConfiguration('language', configuration.language.options[1]);
    vm.fiscal_year_id = vm.fiscalYears.data[vm.fiscalYears.data.length-1].id;
    vm.previous_fiscal_year_id = vm.fiscalYears.data[vm.fiscalYears.data.length-1].previous_fiscal_year;
  }

  function selectConfiguration(key, value) {
    configuration[key].selected = value;
  }

  function generateDocument() {
    var path = serverUtilityPath;
    var configurationObject = {};

    configurationObject.language = configuration.language.selected.value;
    configurationObject.fy = vm.fiscal_year_id;
    configurationObject.pfy = vm.previous_fiscal_year_id ||  0;
    configurationObject.enterprise = configuration.enterprise;
    configurationObject.project = configuration.project;

    vm.building = true;

    $http.post(path, configurationObject)
      .then(function (result) {
        // Expose generated document path to template
        vm.generatedDocumentPath = result.data;
      })
      .catch(function (err) {
        messenger.danger('error' + err);
      })
      .finally(function (){
        vm.building = false;
      });
  }

  function clearPath() {
    vm.generatedDocumentPath = null;
  }

  vm.generate_doc = $translate.instant('VARIATION_EXPLOITATION.GENERATE_DOC');
  vm.loading = $translate.instant('VARIATION_EXPLOITATION.LOADING');
  vm.building = false;
  vm.configuration = configuration;

  vm.selectConfiguration = selectConfiguration;
  vm.generateDocument = generateDocument;
  vm.clearPath = clearPath;
};

variationExploitationController.$inject = ['$http', '$translate', 'validate', 'reportConfigService', 'messenger'];
angular.module('bhima.controllers').controller('variationExploitationController', variationExploitationController);
